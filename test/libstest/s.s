CREATE TABLE `ctree` (
  `nid` int(11) primary key AUTO_INCREMENT,
  `name` varchar(50) DEFAULT NULL,
  `fnid` int(11) DEFAULT '-1'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `testcase` (
  `caseid` int(11) NOT NULL AUTO_INCREMENT,
  `scenario` varchar(512) DEFAULT NULL,
  `tags` varchar(512) DEFAULT NULL,
  `name` varchar(1024) DEFAULT NULL,
  `ttype` varchar(50) DEFAULT NULL,
  `priority` varchar(20) DEFAULT NULL,
  `steps` varchar(2048) DEFAULT NULL,
  `remark` varchar(1024) DEFAULT NULL,
  `owner` varchar(50) DEFAULT NULL,
  `modifytime` datetime DEFAULT NULL,
  `fnid` int(11) DEFAULT NULL,
  `nid1` int(11) DEFAULT NULL,
  `nid2` int(11) DEFAULT NULL,
  PRIMARY KEY (`caseid`)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

 
CREATE TABLE `testplan` (
  `planid` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(512) DEFAULT NULL,
  `owner` varchar(512) DEFAULT NULL,
  `tags` varchar(512) DEFAULT NULL,
  `summary` varchar(2048) DEFAULT NULL,
  `issues` varchar(2048) DEFAULT NULL,
  
  `ptype` varchar(30) DEFAULT NULL,
  `priority` varchar(10) DEFAULT NULL,
  `status` int(11) DEFAULT NULL,

  `progress` varchar(20) DEFAULT NULL,

  `pstarttime` datetime DEFAULT NULL,
  `pendtime` datetime DEFAULT NULL,
  `starttime` datetime DEFAULT NULL,
  `endtime` datetime DEFAULT NULL,
  `mailfrom` varchar(100) DEFAULT NULL,
  `mailto` varchar(1024) DEFAULT NULL,
  `mailcc` varchar(1024) DEFAULT NULL,
  
  `fnid` int(11) DEFAULT NULL,
  `nid1` int(11) DEFAULT NULL,
  `nid2` int(11) DEFAULT NULL,
  
  PRIMARY KEY (`planid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `plancase` (
  `plancaseid` int(11) NOT NULL AUTO_INCREMENT primary key,
  `planid` int(11) DEFAULT NULL,
  `caseid` int(11) DEFAULT NULL,
  `scenario` varchar(512) DEFAULT NULL,
  `tags` varchar(512) DEFAULT NULL,
  `name` varchar(1024) DEFAULT NULL,
  `owner` varchar(512) DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `modifytime` datetime DEFAULT NULL,
  `remark` varchar(1024) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


CREATE TABLE `plandaily` (
  `dailyId` int(11) NOT NULL AUTO_INCREMENT,
  `planid` int(11) DEFAULT NULL,
  `day` datetime DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `progress` varchar(20) DEFAULT NULL,
   caseprogress varchar(20),
   costtime float,
   costman float,
  `summary` varchar(10240) DEFAULT NULL,
  `issues` varchar(10240) DEFAULT NULL,
  PRIMARY KEY (`dailyId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


CREATE TABLE `testenv` (
  `testenvid` int(11) NOT NULL AUTO_INCREMENT,
  `envname` varchar(128) DEFAULT NULL,
  `tags` varchar(128) DEFAULT NULL,
  `hostip` varchar(64) DEFAULT NULL,
  `hostaccount` varchar(128) DEFAULT NULL,
  `hostinfo` varchar(512) DEFAULT NULL,
  
  `vmaccount` varchar(128) DEFAULT NULL,
  `vmammounts` int DEFAULT NULL,
  `vminfo` varchar(2048) DEFAULT NULL,

  `owner` varchar(64) DEFAULT NULL,
  `ownerStatus` varchar(64) DEFAULT NULL,
  `ownerStartTime` datetime DEFAULT NULL,
  `ownerEndTime` datetime DEFAULT NULL,
  `ownerInfo` varchar(1024) DEFAULT NULL,

  `fnid` int(11) DEFAULT NULL,
  `nid1` int(11) DEFAULT NULL,
  `nid2` int(11) DEFAULT NULL,
  PRIMARY KEY (`testenvid`)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;


CREATE TABLE `cconfig` (
  `configid` int(11) NOT NULL AUTO_INCREMENT,
  `cname` varchar(128) DEFAULT NULL,
  `subject` varchar(128) DEFAULT NULL,
  `ckey` varchar(128) DEFAULT NULL,
 
  `stype` int,
  `ccontent` varchar(10240) DEFAULT NULL,
  
   `owner` varchar(50) DEFAULT NULL,
   `modifytime` datetime DEFAULT NULL,

  `fnid` int(11) DEFAULT NULL,
  `nid1` int(11) DEFAULT NULL,
  `nid2` int(11) DEFAULT NULL,
  PRIMARY KEY (`configid`)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;